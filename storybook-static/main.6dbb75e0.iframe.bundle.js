(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js"),documentation=__webpack_require__("./documentation.json");Object(angular.setCompodocJson)(documentation);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(ClientApi.d)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.e)(loader,!1)}));case"parameters":return Object(ClientApi.f)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.b)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"render":return Object(ClientApi.g)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.f)(v,!1);case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./documentation.json":function(module){module.exports=JSON.parse('{"pipes":[],"interfaces":[{"name":"Task","id":"interface-Task-d4d37e919bf153b85cd73cf76b3d81234228b20ae5a9a500ccf0118c584fdae333a8448d8becdbaa20c0fdaf47fd111516c76691ee76980e2a62f442b656bd75","file":"src/app/models/task.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Task {\\r\\n  id: string;\\r\\n  title: string;\\r\\n  state: string;\\r\\n}\\r\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"User","id":"interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400","file":"src/stories/User.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface User {}\\r\\n","properties":[],"indexSignatures":[],"methods":[]}],"injectables":[],"guards":[],"interceptors":[],"classes":[{"name":"AppError","id":"class-AppError-7e67415407b42cb5eb58681dcfa75d97169f488846b93cd0514e8df2a1489cc08ec6515a00c7b5ac2bec828556a08b0c2ceda71e5d643a22b7c0445602c7d7f9","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = {\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n};\\r\\n\\r\\nexport class TaskStateModel {\\r\\n  entities: { [id: number]: Task };\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'tasks\',\\r\\n  defaults: {\\r\\n    entities: defaultTasks,\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\nexport class TasksState {\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel) {\\r\\n    const entities = state.entities;\\r\\n    return Object.keys(entities).map((id) => entities[+id]);\\r\\n  }\\r\\n\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel) {\\r\\n    const { error } = state;\\r\\n    return error;\\r\\n  }\\r\\n  //\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_PINNED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_ARCHIVED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"payload","type":"boolean","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"payload","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"payload","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"type","defaultValue":"actions.ERROR","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[124,144]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ArchiveTask","id":"class-ArchiveTask-7e67415407b42cb5eb58681dcfa75d97169f488846b93cd0514e8df2a1489cc08ec6515a00c7b5ac2bec828556a08b0c2ceda71e5d643a22b7c0445602c7d7f9","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = {\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n};\\r\\n\\r\\nexport class TaskStateModel {\\r\\n  entities: { [id: number]: Task };\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'tasks\',\\r\\n  defaults: {\\r\\n    entities: defaultTasks,\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\nexport class TasksState {\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel) {\\r\\n    const entities = state.entities;\\r\\n    return Object.keys(entities).map((id) => entities[+id]);\\r\\n  }\\r\\n\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel) {\\r\\n    const { error } = state;\\r\\n    return error;\\r\\n  }\\r\\n  //\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_PINNED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_ARCHIVED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"payload","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"type","defaultValue":"actions.ARCHIVE_TASK","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[124,144]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PinTask","id":"class-PinTask-7e67415407b42cb5eb58681dcfa75d97169f488846b93cd0514e8df2a1489cc08ec6515a00c7b5ac2bec828556a08b0c2ceda71e5d643a22b7c0445602c7d7f9","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = {\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n};\\r\\n\\r\\nexport class TaskStateModel {\\r\\n  entities: { [id: number]: Task };\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'tasks\',\\r\\n  defaults: {\\r\\n    entities: defaultTasks,\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\nexport class TasksState {\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel) {\\r\\n    const entities = state.entities;\\r\\n    return Object.keys(entities).map((id) => entities[+id]);\\r\\n  }\\r\\n\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel) {\\r\\n    const { error } = state;\\r\\n    return error;\\r\\n  }\\r\\n  //\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_PINNED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_ARCHIVED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"payload","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"payload","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"type","defaultValue":"actions.PIN_TASK","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[124,144]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"TasksState","id":"class-TasksState-7e67415407b42cb5eb58681dcfa75d97169f488846b93cd0514e8df2a1489cc08ec6515a00c7b5ac2bec828556a08b0c2ceda71e5d643a22b7c0445602c7d7f9","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = {\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n};\\r\\n\\r\\nexport class TaskStateModel {\\r\\n  entities: { [id: number]: Task };\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'tasks\',\\r\\n  defaults: {\\r\\n    entities: defaultTasks,\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\nexport class TasksState {\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel) {\\r\\n    const entities = state.entities;\\r\\n    return Object.keys(entities).map((id) => entities[+id]);\\r\\n  }\\r\\n\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel) {\\r\\n    const { error } = state;\\r\\n    return error;\\r\\n  }\\r\\n  //\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_PINNED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_ARCHIVED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","properties":[],"rawdescription":"\\n","methods":[{"name":"archiveTask","args":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":""},{"type":"ArchiveTask","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Action","stringifiedArguments":"ArchiveTask"}],"jsdoctags":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"ArchiveTask","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAllTasks","args":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Selector","stringifiedArguments":""}],"modifierKind":[124],"jsdoctags":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getError","args":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Selector","stringifiedArguments":""}],"modifierKind":[124],"jsdoctags":[{"name":"state","type":"TaskStateModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pinTask","args":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":""},{"type":"PinTask","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Action","stringifiedArguments":"PinTask"}],"jsdoctags":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"PinTask","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setAppError","args":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":""},{"type":"AppError","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Action","stringifiedArguments":"AppError"}],"jsdoctags":[{"type":"StateContext<TaskStateModel>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"type":"AppError","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[]},{"name":"TaskStateModel","id":"class-TaskStateModel-7e67415407b42cb5eb58681dcfa75d97169f488846b93cd0514e8df2a1489cc08ec6515a00c7b5ac2bec828556a08b0c2ceda71e5d643a22b7c0445602c7d7f9","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { State, Selector, Action, StateContext } from \'@ngxs/store\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n// defines the actions available to the app\\r\\nexport const actions = {\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n};\\r\\n\\r\\nexport class ArchiveTask {\\r\\n  static readonly type = actions.ARCHIVE_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n\\r\\nexport class PinTask {\\r\\n  static readonly type = actions.PIN_TASK;\\r\\n\\r\\n  constructor(public payload: string) {}\\r\\n}\\r\\n// The class definition for our error field\\r\\nexport class AppError {\\r\\n  static readonly type = actions.ERROR;\\r\\n  constructor(public payload: boolean) {}\\r\\n}\\r\\n\\r\\n// The initial state of our store when the app loads.\\r\\n// Usually you would fetch this from a server\\r\\nconst defaultTasks = {\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n};\\r\\n\\r\\nexport class TaskStateModel {\\r\\n  entities: { [id: number]: Task };\\r\\n  error: boolean;\\r\\n}\\r\\n\\r\\n// Sets the default state\\r\\n@State<TaskStateModel>({\\r\\n  name: \'tasks\',\\r\\n  defaults: {\\r\\n    entities: defaultTasks,\\r\\n    error: false,\\r\\n  },\\r\\n})\\r\\nexport class TasksState {\\r\\n  @Selector()\\r\\n  static getAllTasks(state: TaskStateModel) {\\r\\n    const entities = state.entities;\\r\\n    return Object.keys(entities).map((id) => entities[+id]);\\r\\n  }\\r\\n\\r\\n  // Defines a new selector for the error field\\r\\n  @Selector()\\r\\n  static getError(state: TaskStateModel) {\\r\\n    const { error } = state;\\r\\n    return error;\\r\\n  }\\r\\n  //\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(PinTask)\\r\\n  pinTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: PinTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_PINNED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n  // Triggers the PinTask action, similar to redux\\r\\n  @Action(ArchiveTask)\\r\\n  archiveTask(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: ArchiveTask\\r\\n  ) {\\r\\n    const state = getState().entities;\\r\\n\\r\\n    const entities = {\\r\\n      ...state,\\r\\n      [payload]: { ...state[payload], state: \'TASK_ARCHIVED\' },\\r\\n    };\\r\\n\\r\\n    patchState({\\r\\n      entities,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // Function to handle how the state should be updated when the action is triggered\\r\\n  @Action(AppError)\\r\\n  setAppError(\\r\\n    { patchState, getState }: StateContext<TaskStateModel>,\\r\\n    { payload }: AppError\\r\\n  ) {\\r\\n    const state = getState();\\r\\n    patchState({\\r\\n      error: !state.error,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n","properties":[{"name":"entities","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":39},{"name":"error","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":40}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AppComponent","id":"component-AppComponent-574b4f14a0b8cc81cfbb68191e471f663a0fa82a67e235cb9062273070b1c8b67c46e321343842848001a049e5dcc97df1a07030e2ace22a19a9ca65c5df0805","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":[],"styles":[],"template":"<app-inbox-screen></app-inbox-screen>","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"title","defaultValue":"\'taskbox\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-root\',\\r\\n\\r\\n  template: ` <app-inbox-screen></app-inbox-screen> `,\\r\\n})\\r\\nexport class AppComponent {\\r\\n  title = \'taskbox\';\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"ButtonComponent","id":"component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1","file":"src/stories/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-button","styleUrls":["./button.css"],"styles":[],"template":"<button   type=\\"button\\"\\n   (click)=\\"onClick.emit($event)\\"\\n   [ngClass]=\\"classes\\"\\n   [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n >\\n   {{ label }}\\n </button>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"backgroundColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhat background color to use\\n","description":"<p>What background color to use</p>\\n","line":26,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'Button\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":747,"end":761,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":748,"end":756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"required"},"comment":""}],"rawdescription":"\\n\\nButton contents\\n\\n","description":"<p>Button contents</p>\\n","line":40,"type":"string","decorators":[]},{"name":"primary","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs this the principal call to action on the page?\\n","description":"<p>Is this the principal call to action on the page?</p>\\n","line":20,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"\'medium\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHow large should the button be?\\n","description":"<p>How large should the button be?</p>\\n","line":32,"type":"\\"small\\" | \\"medium\\" | \\"large\\"","decorators":[]}],"outputsClass":[{"name":"onClick","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOptional click handler\\n","description":"<p>Optional click handler</p>\\n","line":46,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'storybook-button\',\\r\\n  template: ` <button\\r\\n    type=\\"button\\"\\r\\n    (click)=\\"onClick.emit($event)\\"\\r\\n    [ngClass]=\\"classes\\"\\r\\n    [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\r\\n  >\\r\\n    {{ label }}\\r\\n  </button>`,\\r\\n  styleUrls: [\'./button.css\'],\\r\\n})\\r\\nexport default class ButtonComponent {\\r\\n  /**\\r\\n   * Is this the principal call to action on the page?\\r\\n   */\\r\\n  @Input()\\r\\n  primary = false;\\r\\n\\r\\n  /**\\r\\n   * What background color to use\\r\\n   */\\r\\n  @Input()\\r\\n  backgroundColor?: string;\\r\\n\\r\\n  /**\\r\\n   * How large should the button be?\\r\\n   */\\r\\n  @Input()\\r\\n  size: \'small\' | \'medium\' | \'large\' = \'medium\';\\r\\n\\r\\n  /**\\r\\n   * Button contents\\r\\n   *\\r\\n   * @required\\r\\n   */\\r\\n  @Input()\\r\\n  label = \'Button\';\\r\\n\\r\\n  /**\\r\\n   * Optional click handler\\r\\n   */\\r\\n  @Output()\\r\\n  onClick = new EventEmitter<Event>();\\r\\n\\r\\n  public get classes(): string[] {\\r\\n    const mode = this.primary ? \'storybook-button--primary\' : \'storybook-button--secondary\';\\r\\n\\r\\n    return [\'storybook-button\', `storybook-button--${this.size}`, mode];\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".storybook-button {\\r\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\r\\n  font-weight: 700;\\r\\n  border: 0;\\r\\n  border-radius: 3em;\\r\\n  cursor: pointer;\\r\\n  display: inline-block;\\r\\n  line-height: 1;\\r\\n}\\r\\n.storybook-button--primary {\\r\\n  color: white;\\r\\n  background-color: #1ea7fd;\\r\\n}\\r\\n.storybook-button--secondary {\\r\\n  color: #333;\\r\\n  background-color: transparent;\\r\\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\\r\\n}\\r\\n.storybook-button--small {\\r\\n  font-size: 12px;\\r\\n  padding: 10px 16px;\\r\\n}\\r\\n.storybook-button--medium {\\r\\n  font-size: 14px;\\r\\n  padding: 11px 20px;\\r\\n}\\r\\n.storybook-button--large {\\r\\n  font-size: 16px;\\r\\n  padding: 12px 24px;\\r\\n}\\r\\n","styleUrl":"./button.css"}],"stylesData":"","accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"[]","returnType":"string[]","line":48}}}},{"name":"HeaderComponent","id":"component-HeaderComponent-9e6f72322431740f24700320358c5bb091c497fb5e4331999d4e77740f43da7c0d5bb2d645997a97f860ca86bb61f311cb55c8fe136f7096dd6410154fcb9c63","file":"src/stories/header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-header","styleUrls":["./header.css"],"styles":[],"template":"<header>    <div class=\\"wrapper\\">\\n      <div>\\n        <svg width=\\"32\\" height=\\"32\\" viewBox=\\"0 0 32 32\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\n            <path\\n              d=\\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\\"\\n              fill=\\"#FFF\\"\\n            />\\n            <path\\n              d=\\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\\"\\n              fill=\\"#555AB9\\"\\n            />\\n            <path\\n              d=\\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\\"\\n              fill=\\"#91BAF8\\"\\n            />\\n          </g>\\n        </svg>\\n        <h1>Acme</h1>\\n      </div>\\n      <div>\\n        <storybook-button\\n          *ngIf=\\"user\\"\\n          size=\\"small\\"\\n          (onClick)=\\"onLogout.emit($event)\\"\\n          label=\\"Log out\\"\\n        ></storybook-button>\\n        <storybook-button\\n          *ngIf=\\"!user\\"\\n          size=\\"small\\"\\n          (onClick)=\\"onLogin.emit($event)\\"\\n          label=\\"Log in\\"\\n        ></storybook-button>\\n        <storybook-button\\n          *ngIf=\\"!user\\"\\n          primary\\n          size=\\"small\\"\\n          (onClick)=\\"onCreateAccount.emit($event)\\"\\n          label=\\"Sign up\\"\\n        ></storybook-button>\\n      </div>\\n    </div>\\n  </header>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"user","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":54,"type":"User | null","decorators":[]}],"outputsClass":[{"name":"onCreateAccount","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":63,"type":"EventEmitter"},{"name":"onLogin","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":57,"type":"EventEmitter"},{"name":"onLogout","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":60,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\nimport { User } from \'./User\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'storybook-header\',\\r\\n  template: `<header>\\r\\n    <div class=\\"wrapper\\">\\r\\n      <div>\\r\\n        <svg width=\\"32\\" height=\\"32\\" viewBox=\\"0 0 32 32\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\r\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\r\\n            <path\\r\\n              d=\\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\\"\\r\\n              fill=\\"#FFF\\"\\r\\n            />\\r\\n            <path\\r\\n              d=\\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\\"\\r\\n              fill=\\"#555AB9\\"\\r\\n            />\\r\\n            <path\\r\\n              d=\\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\\"\\r\\n              fill=\\"#91BAF8\\"\\r\\n            />\\r\\n          </g>\\r\\n        </svg>\\r\\n        <h1>Acme</h1>\\r\\n      </div>\\r\\n      <div>\\r\\n        <storybook-button\\r\\n          *ngIf=\\"user\\"\\r\\n          size=\\"small\\"\\r\\n          (onClick)=\\"onLogout.emit($event)\\"\\r\\n          label=\\"Log out\\"\\r\\n        ></storybook-button>\\r\\n        <storybook-button\\r\\n          *ngIf=\\"!user\\"\\r\\n          size=\\"small\\"\\r\\n          (onClick)=\\"onLogin.emit($event)\\"\\r\\n          label=\\"Log in\\"\\r\\n        ></storybook-button>\\r\\n        <storybook-button\\r\\n          *ngIf=\\"!user\\"\\r\\n          primary\\r\\n          size=\\"small\\"\\r\\n          (onClick)=\\"onCreateAccount.emit($event)\\"\\r\\n          label=\\"Sign up\\"\\r\\n        ></storybook-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>`,\\r\\n  styleUrls: [\'./header.css\'],\\r\\n})\\r\\nexport default class HeaderComponent {\\r\\n  @Input()\\r\\n  user: User | null = null;\\r\\n\\r\\n  @Output()\\r\\n  onLogin = new EventEmitter<Event>();\\r\\n\\r\\n  @Output()\\r\\n  onLogout = new EventEmitter<Event>();\\r\\n\\r\\n  @Output()\\r\\n  onCreateAccount = new EventEmitter<Event>();\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".wrapper {\\r\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\r\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\r\\n  padding: 15px 20px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\nsvg {\\r\\n  display: inline-block;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  font-weight: 900;\\r\\n  font-size: 20px;\\r\\n  line-height: 1;\\r\\n  margin: 6px 0 6px 10px;\\r\\n  display: inline-block;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\nbutton + button {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n","styleUrl":"./header.css"}],"stylesData":""},{"name":"InboxScreenComponent","id":"component-InboxScreenComponent-ea1821d439ccc1fd42a44a6e52952e391fdb4f9366676e00342fb6c2c7e25249c90efe77600ca607727230d8fdce3c829bdb7c8ae9d859819a4c35f7f3efb296","file":"src/app/components/inbox-screen.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-inbox-screen","styleUrls":[],"styles":[],"template":"<app-pure-inbox-screen [error]=\\"error$ | async\\"></app-pure-inbox-screen>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error$","deprecated":false,"deprecationMessage":"","type":"Observable<any>","optional":false,"description":"","line":13,"decorators":[{"name":"Select","stringifiedArguments":"TasksState.getError"}]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\nimport { Select } from \'@ngxs/store\';\\r\\nimport { TasksState } from \'../state/task.state\';\\r\\nimport { Observable } from \'rxjs\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-inbox-screen\',\\r\\n  template: `\\r\\n    <app-pure-inbox-screen [error]=\\"error$ | async\\"></app-pure-inbox-screen>\\r\\n  `,\\r\\n})\\r\\nexport class InboxScreenComponent {\\r\\n  @Select(TasksState.getError) error$: Observable<any>;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"InboxScreenComponent","id":"component-InboxScreenComponent-1fe2cf620ca085b8a85675554ddfd6a3ee9bc8c707fc497c6f18e59ea708af6029873e257af5f0aebebbcebe434169be0a4285e6c843c3ebe0f8240a632c369e-1","file":"src/app/components/inbox-screen.compontnt.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-inbox-screen","styleUrls":[],"styles":[],"template":"<app-pure-inbox-screen [error]=\\"error$ | async\\"></app-pure-inbox-screen>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"error$","deprecated":false,"deprecationMessage":"","type":"Observable<any>","optional":false,"description":"","line":13,"decorators":[{"name":"Select","stringifiedArguments":"TasksState.getError"}]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\nimport { Select } from \'@ngxs/store\';\\r\\nimport { TasksState } from \'../state/task.state\';\\r\\nimport { Observable } from \'rxjs\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-inbox-screen\',\\r\\n  template: `\\r\\n    <app-pure-inbox-screen [error]=\\"error$ | async\\"></app-pure-inbox-screen>\\r\\n  `,\\r\\n})\\r\\nexport class InboxScreenComponent {\\r\\n  @Select(TasksState.getError) error$: Observable<any>;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","isDuplicate":true,"duplicateId":1,"duplicateName":"InboxScreenComponent-1"},{"name":"PageComponent","id":"component-PageComponent-dc14b12320300a3560aae9da5f0ea2923d91413cab32b5b2ecbb1832e735b7621b9f08e659d24dfe63817a4bf48114b0c2f97fd6bda0a718a6cfe00b9199f492","file":"src/stories/page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-page","styleUrls":["./page.css"],"styles":[],"template":"<article>    <storybook-header\\n      [user]=\\"user\\"\\n      (onLogout)=\\"onLogout.emit($event)\\"\\n      (onLogin)=\\"onLogin.emit($event)\\"\\n      (onCreateAccount)=\\"onCreateAccount.emit($event)\\"\\n    ></storybook-header>\\n    <section>\\n      <h2>Pages in Storybook</h2>\\n      <p>\\n        We recommend building UIs with a\\n        <a href=\\"https://componentdriven.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\n          <strong>component-driven</strong>\\n        </a>\\n        process starting with atomic components and ending with pages.\\n      </p>\\n      <p>\\n        Render pages with mock data. This makes it easy to build and review page states without\\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\\n        in Storybook:\\n      </p>\\n      <ul>\\n        <li>\\n          Use a higher-level connected component. Storybook helps you compose such data from the\\n          \\"args\\" of child component stories\\n        </li>\\n        <li>\\n          Assemble data in the page component from your services. You can mock these services out\\n          using Storybook.\\n        </li>\\n      </ul>\\n      <p>\\n        Get a guided tutorial on component-driven development at\\n        <a href=\\"https://storybook.js.org/tutorials/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\n          Storybook tutorials\\n        </a>\\n        . Read more in the\\n        <a href=\\"https://storybook.js.org/docs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"> docs </a>\\n        .\\n      </p>\\n      <div class=\\"tip-wrapper\\">\\n        <span class=\\"tip\\">Tip</span> Adjust the width of the canvas with the\\n        <svg width=\\"10\\" height=\\"10\\" viewBox=\\"0 0 12 12\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\n            <path\\n              d=\\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\\"\\n              id=\\"a\\"\\n              fill=\\"#999\\"\\n            />\\n          </g>\\n        </svg>\\n        Viewports addon in the toolbar\\n      </div>\\n    </section>\\n  </article>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"user","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":65,"type":"User | null","decorators":[]}],"outputsClass":[{"name":"onCreateAccount","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":74,"type":"EventEmitter"},{"name":"onLogin","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":68,"type":"EventEmitter"},{"name":"onLogout","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":71,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\nimport { User } from \'./User\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'storybook-page\',\\r\\n  template: `<article>\\r\\n    <storybook-header\\r\\n      [user]=\\"user\\"\\r\\n      (onLogout)=\\"onLogout.emit($event)\\"\\r\\n      (onLogin)=\\"onLogin.emit($event)\\"\\r\\n      (onCreateAccount)=\\"onCreateAccount.emit($event)\\"\\r\\n    ></storybook-header>\\r\\n    <section>\\r\\n      <h2>Pages in Storybook</h2>\\r\\n      <p>\\r\\n        We recommend building UIs with a\\r\\n        <a href=\\"https://componentdriven.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\r\\n          <strong>component-driven</strong>\\r\\n        </a>\\r\\n        process starting with atomic components and ending with pages.\\r\\n      </p>\\r\\n      <p>\\r\\n        Render pages with mock data. This makes it easy to build and review page states without\\r\\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\\r\\n        in Storybook:\\r\\n      </p>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Use a higher-level connected component. Storybook helps you compose such data from the\\r\\n          \\"args\\" of child component stories\\r\\n        </li>\\r\\n        <li>\\r\\n          Assemble data in the page component from your services. You can mock these services out\\r\\n          using Storybook.\\r\\n        </li>\\r\\n      </ul>\\r\\n      <p>\\r\\n        Get a guided tutorial on component-driven development at\\r\\n        <a href=\\"https://storybook.js.org/tutorials/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">\\r\\n          Storybook tutorials\\r\\n        </a>\\r\\n        . Read more in the\\r\\n        <a href=\\"https://storybook.js.org/docs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"> docs </a>\\r\\n        .\\r\\n      </p>\\r\\n      <div class=\\"tip-wrapper\\">\\r\\n        <span class=\\"tip\\">Tip</span> Adjust the width of the canvas with the\\r\\n        <svg width=\\"10\\" height=\\"10\\" viewBox=\\"0 0 12 12\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\r\\n          <g fill=\\"none\\" fillRule=\\"evenodd\\">\\r\\n            <path\\r\\n              d=\\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\\"\\r\\n              id=\\"a\\"\\r\\n              fill=\\"#999\\"\\r\\n            />\\r\\n          </g>\\r\\n        </svg>\\r\\n        Viewports addon in the toolbar\\r\\n      </div>\\r\\n    </section>\\r\\n  </article>`,\\r\\n  styleUrls: [\'./page.css\'],\\r\\n})\\r\\nexport default class PageComponent {\\r\\n  @Input()\\r\\n  user: User | null = null;\\r\\n\\r\\n  @Output()\\r\\n  onLogin = new EventEmitter<Event>();\\r\\n\\r\\n  @Output()\\r\\n  onLogout = new EventEmitter<Event>();\\r\\n\\r\\n  @Output()\\r\\n  onCreateAccount = new EventEmitter<Event>();\\r\\n}\\r\\n\\r\\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\\r\\n//   <article>\\r\\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\\r\\n\\r\\n// );\\r\\n// Page.propTypes = {\\r\\n//   user: PropTypes.shape({}),\\r\\n//   onLogin: PropTypes.func.isRequired,\\r\\n//   onLogout: PropTypes.func.isRequired,\\r\\n//   onCreateAccount: PropTypes.func.isRequired,\\r\\n// };\\r\\n\\r\\n// Page.defaultProps = {\\r\\n//   user: null,\\r\\n// };\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"section {\\r\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\r\\n  font-size: 14px;\\r\\n  line-height: 24px;\\r\\n  padding: 48px 20px;\\r\\n  margin: 0 auto;\\r\\n  max-width: 600px;\\r\\n  color: #333;\\r\\n}\\r\\n\\r\\nsection h2 {\\r\\n  font-weight: 900;\\r\\n  font-size: 32px;\\r\\n  line-height: 1;\\r\\n  margin: 0 0 4px;\\r\\n  display: inline-block;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\nsection p {\\r\\n  margin: 1em 0;\\r\\n}\\r\\n\\r\\nsection a {\\r\\n  text-decoration: none;\\r\\n  color: #1ea7fd;\\r\\n}\\r\\n\\r\\nsection ul {\\r\\n  padding-left: 30px;\\r\\n  margin: 1em 0;\\r\\n}\\r\\n\\r\\nsection li {\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\nsection .tip {\\r\\n  display: inline-block;\\r\\n  border-radius: 1em;\\r\\n  font-size: 11px;\\r\\n  line-height: 12px;\\r\\n  font-weight: 700;\\r\\n  background: #e7fdd8;\\r\\n  color: #66bf3c;\\r\\n  padding: 4px 12px;\\r\\n  margin-right: 10px;\\r\\n  vertical-align: top;\\r\\n}\\r\\n\\r\\nsection .tip-wrapper {\\r\\n  font-size: 13px;\\r\\n  line-height: 20px;\\r\\n  margin-top: 40px;\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\n\\r\\nsection .tip-wrapper svg {\\r\\n  display: inline-block;\\r\\n  height: 12px;\\r\\n  width: 12px;\\r\\n  margin-right: 4px;\\r\\n  vertical-align: top;\\r\\n  margin-top: 3px;\\r\\n}\\r\\n\\r\\nsection .tip-wrapper svg path {\\r\\n  fill: #1ea7fd;\\r\\n}\\r\\n","styleUrl":"./page.css"}],"stylesData":""},{"name":"PureInboxScreenComponent","id":"component-PureInboxScreenComponent-6e849e59ea4c0d8aceccd469b6fbf576c11336dd6e48aaf14d5e395a1191b7388c0dbbaef568567fa9c3b17ea2719dccd7d4cad2acc2c405fb7cb3b32486b9c6","file":"src/app/components/pure-inbox-screen.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-pure-inbox-screen","styleUrls":[],"styles":[],"template":"<div *ngIf=\\"error\\" class=\\"page lists-show\\">\\n  <div class=\\"wrapper-message\\">\\n    <span class=\\"icon-face-sad\\"></span>\\n    <div class=\\"title-message\\">Oh no!</div>\\n    <div class=\\"subtitle-message\\">Something went wrong</div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\"!error\\" class=\\"page lists-show\\">\\n  <nav>\\n    <h1 class=\\"title-page\\">\\n      <span class=\\"title-wrapper\\">Taskbox</span>\\n    </h1>\\n  </nav>\\n  <app-task-list></app-task-list>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"error","deprecated":false,"deprecationMessage":"","line":25,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-pure-inbox-screen\',\\r\\n  template: `\\r\\n    <div *ngIf=\\"error\\" class=\\"page lists-show\\">\\r\\n      <div class=\\"wrapper-message\\">\\r\\n        <span class=\\"icon-face-sad\\"></span>\\r\\n        <div class=\\"title-message\\">Oh no!</div>\\r\\n        <div class=\\"subtitle-message\\">Something went wrong</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"!error\\" class=\\"page lists-show\\">\\r\\n      <nav>\\r\\n        <h1 class=\\"title-page\\">\\r\\n          <span class=\\"title-wrapper\\">Taskbox</span>\\r\\n        </h1>\\r\\n      </nav>\\r\\n      <app-task-list></app-task-list>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class PureInboxScreenComponent {\\r\\n  @Input() error: any;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"PureInboxScreenComponent","id":"component-PureInboxScreenComponent-d3793fdf1366157df5698fa4fa6079c85285687f4af55019ec4461abe9b7e62c5b5be7b3e12b98b0839260459c5a0a3d7eb46b0c8d813833c4396c9020765014-1","file":"src/app/components/pure-inbox-screen.components.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-pure-inbox-screen","styleUrls":[],"styles":[],"template":"<div *ngIf=\\"error\\" class=\\"page lists-show\\">\\n  <div class=\\"wrapper-message\\">\\n    <span class=\\"icon-face-sad\\"></span>\\n    <div class=\\"title-message\\">Oh no!</div>\\n    <div class=\\"subtitle-message\\">Something went wrong</div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\"!error\\" class=\\"page lists-show\\">\\n  <nav>\\n    <h1 class=\\"title-page\\">\\n      <span class=\\"title-wrapper\\">Taskbox</span>\\n    </h1>\\n  </nav>\\n  <app-task-list></app-task-list>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"error","deprecated":false,"deprecationMessage":"","line":25,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-pure-inbox-screen\',\\r\\n  template: `\\r\\n    <div *ngIf=\\"error\\" class=\\"page lists-show\\">\\r\\n      <div class=\\"wrapper-message\\">\\r\\n        <span class=\\"icon-face-sad\\"></span>\\r\\n        <div class=\\"title-message\\">Oh no!</div>\\r\\n        <div class=\\"subtitle-message\\">Something went wrong</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"!error\\" class=\\"page lists-show\\">\\r\\n      <nav>\\r\\n        <h1 class=\\"title-page\\">\\r\\n          <span class=\\"title-wrapper\\">Taskbox</span>\\r\\n        </h1>\\r\\n      </nav>\\r\\n      <app-task-list></app-task-list>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class PureInboxScreenComponent {\\r\\n  @Input() error: any;\\r\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"","isDuplicate":true,"duplicateId":1,"duplicateName":"PureInboxScreenComponent-1"},{"name":"PureTaskListComponent","id":"component-PureTaskListComponent-cfca6bc7257540e42245f4d28866db592f31c2b8017459be1281d701d780ca94b0e06085abb7c6c6c7083dc2b48cedeb255d601631011955e598d1b91aa37df3","file":"src/app/components/pure-task-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-pure-task-list","styleUrls":[],"styles":[],"template":"<div class=\\"list-items\\">\\n  <app-task\\n    *ngFor=\\"let task of tasksInOrder\\"\\n    [task]=\\"task\\"\\n    (onArchiveTask)=\\"onArchiveTask.emit($event)\\"\\n    (onPinTask)=\\"onPinTask.emit($event)\\"\\n  >\\n  </app-task>\\n  <div\\n    *ngIf=\\"tasksInOrder.length === 0 && !loading\\"\\n    class=\\"wrapper-message\\"\\n  >\\n    <span class=\\"icon-check\\"></span>\\n    <div class=\\"title-message\\">You have no tasks</div>\\n    <div class=\\"subtitle-message\\">Sit back and relax</div>\\n  </div>\\n  <div *ngIf=\\"loading\\">\\n    <div *ngFor=\\"let i of [1, 2, 3, 4, 5, 6]\\" class=\\"loading-item\\">\\n      <span class=\\"glow-checkbox\\"></span>\\n      <span class=\\"glow-text\\">\\n        <span>Loading</span> <span>cool</span> <span>state</span>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[]},{"name":"tasks","deprecated":false,"deprecationMessage":"","line":50,"type":"[]","decorators":[]}],"outputsClass":[{"name":"onArchiveTask","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":47,"type":"EventEmitter<any>"},{"name":"onPinTask","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":44,"type":"EventEmitter<any>"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-pure-task-list\',\\r\\n  template: `\\r\\n    <div class=\\"list-items\\">\\r\\n      <app-task\\r\\n        *ngFor=\\"let task of tasksInOrder\\"\\r\\n        [task]=\\"task\\"\\r\\n        (onArchiveTask)=\\"onArchiveTask.emit($event)\\"\\r\\n        (onPinTask)=\\"onPinTask.emit($event)\\"\\r\\n      >\\r\\n      </app-task>\\r\\n      <div\\r\\n        *ngIf=\\"tasksInOrder.length === 0 && !loading\\"\\r\\n        class=\\"wrapper-message\\"\\r\\n      >\\r\\n        <span class=\\"icon-check\\"></span>\\r\\n        <div class=\\"title-message\\">You have no tasks</div>\\r\\n        <div class=\\"subtitle-message\\">Sit back and relax</div>\\r\\n      </div>\\r\\n      <div *ngIf=\\"loading\\">\\r\\n        <div *ngFor=\\"let i of [1, 2, 3, 4, 5, 6]\\" class=\\"loading-item\\">\\r\\n          <span class=\\"glow-checkbox\\"></span>\\r\\n          <span class=\\"glow-text\\">\\r\\n            <span>Loading</span> <span>cool</span> <span>state</span>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class PureTaskListComponent {\\r\\n  /**\\r\\n   * @ignore\\r\\n   * Component property to define ordering of tasks\\r\\n   */\\r\\n  tasksInOrder: Task[] = [];\\r\\n\\r\\n  @Input() loading = false;\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output() onPinTask: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output() onArchiveTask: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  @Input()\\r\\n  set tasks(arr: Task[]) {\\r\\n    this.tasksInOrder = [\\r\\n      ...arr.filter((t) => t.state === \'TASK_PINNED\'),\\r\\n      ...arr.filter((t) => t.state !== \'TASK_PINNED\'),\\r\\n    ];\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"tasks":{"name":"tasks","setSignature":{"name":"tasks","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"arr","type":"Task[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":50,"jsdoctags":[{"name":"arr","type":"Task[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"TaskComponent","id":"component-TaskComponent-a6803cab3e48d481c82c6b5ccbf570cfbe9a889e1f922255fae400de3e08532997554f0171c79b2bd6576f32d3f5e577d0c7f1701bd8bbd799102f6dd5b6115f","file":"src/app/components/task.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task","styleUrls":[],"styles":[],"template":"<div class=\\"list-item {{ task?.state }}\\">\\n  <label class=\\"checkbox\\">\\n    <input\\n      type=\\"checkbox\\"\\n      [defaultChecked]=\\"task?.state === \'TASK_ARCHIVED\'\\"\\n      disabled=\\"true\\"\\n      name=\\"checked\\"\\n    />\\n    <span\\n      class=\\"checkbox-custom\\"\\n      (click)=\\"onArchive(task.id)\\"\\n      attr.aria-label=\\"archiveTask-{{ task?.id }}\\"\\n    ></span>\\n  </label>\\n  <div class=\\"title\\">\\n    <input\\n      type=\\"text\\"\\n      [value]=\\"task?.title\\"\\n      readonly=\\"true\\"\\n      placeholder=\\"Input title\\"\\n    />\\n  </div>\\n  <div class=\\"actions\\">\\n    <a *ngIf=\\"task?.state !== \'TASK_ARCHIVED\'\\" (click)=\\"onPin(task.id)\\">\\n      <span\\n        class=\\"icon-star\\"\\n        attr.aria-label=\\"pinTask-{{ task?.id }}\\"\\n      ></span>\\n    </a>\\n  </div>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"task","deprecated":false,"deprecationMessage":"","line":42,"type":"Task","decorators":[]}],"outputsClass":[{"name":"onArchiveTask","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter"},{"name":"onPinTask","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","line":46,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"onArchive","args":[{"name":"id","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the onArchive event\\n","description":"<p>Component method to trigger the onArchive event</p>\\n","jsdoctags":[{"name":{"pos":1567,"end":1569,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1561,"end":1566,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>string</p>\\n"}]},{"name":"onPin","args":[{"name":"id","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the onPin event\\n","description":"<p>Component method to trigger the onPin event</p>\\n","jsdoctags":[{"name":{"pos":1421,"end":1423,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1415,"end":1420,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>string</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\n\\r\\nimport { Task } from \'../models/task.model\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-task\',\\r\\n  template: `\\r\\n    <div class=\\"list-item {{ task?.state }}\\">\\r\\n      <label class=\\"checkbox\\">\\r\\n        <input\\r\\n          type=\\"checkbox\\"\\r\\n          [defaultChecked]=\\"task?.state === \'TASK_ARCHIVED\'\\"\\r\\n          disabled=\\"true\\"\\r\\n          name=\\"checked\\"\\r\\n        />\\r\\n        <span\\r\\n          class=\\"checkbox-custom\\"\\r\\n          (click)=\\"onArchive(task.id)\\"\\r\\n          attr.aria-label=\\"archiveTask-{{ task?.id }}\\"\\r\\n        ></span>\\r\\n      </label>\\r\\n      <div class=\\"title\\">\\r\\n        <input\\r\\n          type=\\"text\\"\\r\\n          [value]=\\"task?.title\\"\\r\\n          readonly=\\"true\\"\\r\\n          placeholder=\\"Input title\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\"actions\\">\\r\\n        <a *ngIf=\\"task?.state !== \'TASK_ARCHIVED\'\\" (click)=\\"onPin(task.id)\\">\\r\\n          <span\\r\\n            class=\\"icon-star\\"\\r\\n            attr.aria-label=\\"pinTask-{{ task?.id }}\\"\\r\\n          ></span>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class TaskComponent {\\r\\n  @Input() task: Task;\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output()\\r\\n  onPinTask = new EventEmitter<Event>();\\r\\n\\r\\n  // tslint:disable-next-line: no-output-on-prefix\\r\\n  @Output()\\r\\n  onArchiveTask = new EventEmitter<Event>();\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the onPin event\\r\\n   * @param id string\\r\\n   */\\r\\n  onPin(id: any) {\\r\\n    this.onPinTask.emit(id);\\r\\n  }\\r\\n  /**\\r\\n   * Component method to trigger the onArchive event\\r\\n   * @param id string\\r\\n   */\\r\\n  onArchive(id: any) {\\r\\n    this.onArchiveTask.emit(id);\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":""},{"name":"TaskListComponent","id":"component-TaskListComponent-26036f65c4d6a2cabefa324861663f24dbda6ef361b41cf5881530c5927fc2da22e93bb3295e0327eb745ed95f5466660e02d55fce8441992c43a80d01deafdd","file":"src/app/components/task-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-task-list","styleUrls":[],"styles":[],"template":"<app-pure-task-list\\n  [tasks]=\\"tasks$ | async\\"\\n  (onArchiveTask)=\\"archiveTask($event)\\"\\n  (onPinTask)=\\"pinTask($event)\\"\\n></app-pure-task-list>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"tasks$","deprecated":false,"deprecationMessage":"","type":"Observable<Task[]>","optional":false,"description":"","line":18,"decorators":[{"name":"Select","stringifiedArguments":"TasksState.getAllTasks"}]}],"methodsClass":[{"name":"archiveTask","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the archiveTask event\\n","description":"<p>Component method to trigger the archiveTask event</p>\\n","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pinTask","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nComponent method to trigger the pinTask event\\n","description":"<p>Component method to trigger the pinTask event</p>\\n","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\nimport { Select, Store } from \'@ngxs/store\';\\r\\nimport { TasksState, ArchiveTask, PinTask } from \'../state/task.state\';\\r\\nimport { Task } from \'../models/task.model\';\\r\\nimport { Observable } from \'rxjs\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'app-task-list\',\\r\\n  template: `\\r\\n    <app-pure-task-list\\r\\n      [tasks]=\\"tasks$ | async\\"\\r\\n      (onArchiveTask)=\\"archiveTask($event)\\"\\r\\n      (onPinTask)=\\"pinTask($event)\\"\\r\\n    ></app-pure-task-list>\\r\\n  `,\\r\\n})\\r\\nexport class TaskListComponent {\\r\\n  @Select(TasksState.getAllTasks) tasks$: Observable<Task[]>;\\r\\n\\r\\n  constructor(private store: Store) {}\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the archiveTask event\\r\\n   */\\r\\n  archiveTask(id: string) {\\r\\n    this.store.dispatch(new ArchiveTask(id));\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Component method to trigger the pinTask event\\r\\n   */\\r\\n  pinTask(id: string) {\\r\\n    this.store.dispatch(new PinTask(id));\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"store","type":"Store","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"store","type":"Store","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}],"modules":[{"name":"AppModule","id":"module-AppModule-fb1426e2cbf1e4e2b49006b81ac8b9333d3d6dc4ff722bf57f900bf8b4c5906d0d8014f5c53a6933939c906159d10294e381a6542a55796a11f90884caaf172f","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.module.ts","methods":[],"sourceCode":"import { BrowserModule } from \'@angular/platform-browser\';\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { TaskModule } from \'./components/task.module\';\\r\\nimport { NgxsModule } from \'@ngxs/store\';\\r\\nimport { NgxsReduxDevtoolsPluginModule } from \'@ngxs/devtools-plugin\';\\r\\nimport { NgxsLoggerPluginModule } from \'@ngxs/logger-plugin\';\\r\\nimport { AppComponent } from \'./app.component\';\\r\\n\\r\\nimport { InboxScreenComponent } from \'./components/inbox-screen.component\';\\r\\nimport { PureInboxScreenComponent } from \'./components/pure-inbox-screen.component\';\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [AppComponent, InboxScreenComponent, PureInboxScreenComponent],\\r\\n  imports: [\\r\\n    BrowserModule,\\r\\n    TaskModule,\\r\\n    NgxsModule.forRoot([]),\\r\\n    NgxsReduxDevtoolsPluginModule.forRoot(),\\r\\n    NgxsLoggerPluginModule.forRoot(),\\r\\n  ],\\r\\n  providers: [],\\r\\n  bootstrap: [AppComponent],\\r\\n})\\r\\nexport class AppModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AppComponent"},{"name":"InboxScreenComponent"},{"name":"PureInboxScreenComponent"}]},{"type":"imports","elements":[{"name":"TaskModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"TaskModule","id":"module-TaskModule-5245647e76a2de3c1cd0cb9b46ab7430f005b95915c05818d6fd0e04602ee3b2ed2c16ba8fd6e70726309c7ab68edd7d30cfa641ce75d27bb6ff5dfe702c47e5","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/components/task.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { NgxsModule } from \'@ngxs/store\';\\r\\n\\r\\nimport { TaskComponent } from \'./task.component\';\\r\\nimport { TaskListComponent } from \'./task-list.component\';\\r\\nimport { TasksState } from \'../state/task.state\';\\r\\nimport { PureTaskListComponent } from \'./pure-task-list.component\';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, NgxsModule.forFeature([TasksState])],\\r\\n  exports: [TaskComponent, TaskListComponent],\\r\\n  declarations: [TaskComponent, TaskListComponent, PureTaskListComponent],\\r\\n  providers: [],\\r\\n})\\r\\nexport class TaskModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"PureTaskListComponent"},{"name":"TaskComponent"},{"name":"TaskListComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"TaskComponent"},{"name":"TaskListComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  onPinTask: action(\'onPinTask\'),\\r\\n  onArchiveTask: action(\'onArchiveTask\'),\\r\\n}"},{"name":"Archived","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-inbox-screen.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"defaultTasks","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n}"},{"name":"Empty","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: true,\\r\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: false,\\r\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-inbox-screen.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Large","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"mock","ctype":"miscellaneous","subtype":"variable","file":"src/jest-config/__mocks__/globalMocks.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"() => {\\r\\n    let storage = {};\\r\\n    return {\\r\\n      getItem: key => (key in storage ? storage[key] : null),\\r\\n      setItem: (key, value) => (storage[key] = value || \'\'),\\r\\n      removeItem: key => delete storage[key],\\r\\n      clear: () => (storage = {}),\\r\\n    };\\r\\n  }"},{"name":"Pinned","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"},{"name":"Secondary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Small","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Button>","defaultValue":"(args: Button) => ({\\r\\n  props: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Header>","defaultValue":"(args: Header) => ({\\r\\n  props: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Page>","defaultValue":"(args: Page) => ({\\r\\n  props: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-inbox-screen.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"(args) => ({\\r\\n  props: args,\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"(args) => ({\\r\\n  props: {\\r\\n    ...args,\\r\\n    onPinTask: TaskStories.actionsData.onPinTask,\\r\\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\\r\\n  },\\r\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"(args) => ({\\r\\n  props: {\\r\\n    ...args,\\r\\n    onPinTask: actionsData.onPinTask,\\r\\n    onArchiveTask: actionsData.onArchiveTask,\\r\\n  },\\r\\n})"},{"name":"WithPinnedTasks","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"functions":[],"typealiases":[],"enumerations":[],"groupedVariables":{"src/app/state/task.state.ts":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  ARCHIVE_TASK: \'ARCHIVE_TASK\',\\r\\n  PIN_TASK: \'PIN_TASK\',\\r\\n  // Defines the new error field we need\\r\\n  ERROR: \'APP_ERROR\',\\r\\n}"},{"name":"defaultTasks","ctype":"miscellaneous","subtype":"variable","file":"src/app/state/task.state.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  1: { id: \'1\', title: \'Something\', state: \'TASK_INBOX\' },\\r\\n  2: { id: \'2\', title: \'Something more\', state: \'TASK_INBOX\' },\\r\\n  3: { id: \'3\', title: \'Something else\', state: \'TASK_INBOX\' },\\r\\n  4: { id: \'4\', title: \'Something again\', state: \'TASK_INBOX\' },\\r\\n}"}],"src/app/components/task.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  onPinTask: action(\'onPinTask\'),\\r\\n  onArchiveTask: action(\'onArchiveTask\'),\\r\\n}"},{"name":"Archived","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Pinned","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/task.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"(args) => ({\\r\\n  props: {\\r\\n    ...args,\\r\\n    onPinTask: actionsData.onPinTask,\\r\\n    onArchiveTask: actionsData.onArchiveTask,\\r\\n  },\\r\\n})"}],"src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"src/test.ts","deprecated":false,"deprecationMessage":"","type":"literal type"}],"src/app/components/pure-inbox-screen.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-inbox-screen.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-inbox-screen.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-inbox-screen.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"(args) => ({\\r\\n  props: args,\\r\\n})"}],"src/app/components/pure-task-list.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Empty","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"(args) => ({\\r\\n  props: {\\r\\n    ...args,\\r\\n    onPinTask: TaskStories.actionsData.onPinTask,\\r\\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\\r\\n  },\\r\\n})"},{"name":"WithPinnedTasks","ctype":"miscellaneous","subtype":"variable","file":"src/app/components/pure-task-list.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: true,\\r\\n}"}],"src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  production: false,\\r\\n}"}],"src/stories/Button.stories.ts":[{"name":"Large","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Secondary","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Small","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Button>","defaultValue":"(args: Button) => ({\\r\\n  props: args,\\r\\n})"}],"src/stories/Header.stories.ts":[{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Header.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Header>","defaultValue":"(args: Header) => ({\\r\\n  props: args,\\r\\n})"}],"src/stories/Page.stories.ts":[{"name":"LoggedIn","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LoggedOut","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Page.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<Page>","defaultValue":"(args: Page) => ({\\r\\n  props: args,\\r\\n})"}],"src/jest-config/__mocks__/globalMocks.ts":[{"name":"mock","ctype":"miscellaneous","subtype":"variable","file":"src/jest-config/__mocks__/globalMocks.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"() => {\\r\\n    let storage = {};\\r\\n    return {\\r\\n      getItem: key => (key in storage ? storage[key] : null),\\r\\n      setItem: (key, value) => (storage[key] = value || \'\'),\\r\\n      removeItem: key => delete storage[key],\\r\\n      clear: () => (storage = {}),\\r\\n    };\\r\\n  }"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":3,"status":"low","files":[{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/components/inbox-screen.component.ts","type":"component","linktype":"component","name":"InboxScreenComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/components/inbox-screen.compontnt.ts","type":"component","linktype":"component","name":"InboxScreenComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/components/pure-inbox-screen.component.ts","type":"component","linktype":"component","name":"PureInboxScreenComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/components/pure-inbox-screen.components.ts","type":"component","linktype":"component","name":"PureInboxScreenComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/components/pure-inbox-screen.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-inbox-screen.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Error","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-inbox-screen.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-task-list.component.ts","type":"component","linktype":"component","name":"PureTaskListComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/components/pure-task-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-task-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Empty","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-task-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Loading","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-task-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/pure-task-list.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithPinnedTasks","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/task-list.component.ts","type":"component","linktype":"component","name":"TaskListComponent","coveragePercent":40,"coverageCount":"2/5","status":"medium"},{"filePath":"src/app/components/task.component.ts","type":"component","linktype":"component","name":"TaskComponent","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"src/app/components/task.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/task.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Archived","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/task.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/task.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Pinned","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/components/task.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/models/task.model.ts","type":"interface","linktype":"interface","name":"Task","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"AppError","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"ArchiveTask","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"PinTask","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"TasksState","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"class","linktype":"classe","name":"TaskStateModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/state/task.state.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"defaultTasks","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/jest-config/__mocks__/globalMocks.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mock","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Large","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Secondary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Small","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Header.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedIn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Header.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedOut","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Header.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Page.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedIn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Page.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LoggedOut","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Page.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/User.ts","type":"interface","linktype":"interface","name":"User","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"src/stories/header.component.ts","type":"component","linktype":"component","name":"HeaderComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/stories/page.component.ts","type":"component","linktype":"component","name":"PageComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}')},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./src/app/components sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.ts)$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./node_modules/@angular/core/__ivy_ngcc__/fesm2015 lazy recursive":function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./node_modules/@angular/core/__ivy_ngcc__/fesm2015 lazy recursive"},"./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./src/styles.css":function(module,__webpack_exports__,__webpack_require__){"use strict";var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__)()(!1);___CSS_LOADER_EXPORT___.push([module.i,'/* Reset.less\r\n * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We\'re using an adapted version here\tthat cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).\r\n * ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\nsub,\r\nsup,\r\ntt,\r\nvar,\r\ndd,\r\ndl,\r\ndt,\r\nli,\r\nol,\r\nul,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\nbutton,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  font-size: 100%;\r\n  line-height: 1;\r\n  font-family: inherit;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\nol,\r\nul {\r\n  list-style: none;\r\n}\r\nq:before,\r\nq:after,\r\nblockquote:before,\r\nblockquote:after {\r\n  content: "";\r\n}\r\nhtml {\r\n  font-size: 100%;\r\n  -webkit-text-size-adjust: 100%;\r\n  -ms-text-size-adjust: 100%;\r\n}\r\na:focus {\r\n  outline: thin dotted;\r\n}\r\na:hover,\r\na:active {\r\n  outline: 0;\r\n}\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nnav,\r\nsection {\r\n  display: block;\r\n}\r\naudio,\r\ncanvas,\r\nvideo {\r\n  display: inline-block;\r\n  *display: inline;\r\n  *zoom: 1;\r\n}\r\naudio:not([controls]) {\r\n  display: none;\r\n}\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\nsup {\r\n  top: -0.5em;\r\n}\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\nimg {\r\n  border: 0;\r\n  -ms-interpolation-mode: bicubic;\r\n}\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n  font-size: 100%;\r\n  margin: 0;\r\n  vertical-align: baseline;\r\n  *vertical-align: middle;\r\n}\r\nbutton,\r\ninput {\r\n  line-height: normal;\r\n  *overflow: visible;\r\n}\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\nbutton,\r\ninput[type="button"],\r\ninput[type="reset"],\r\ninput[type="submit"] {\r\n  cursor: pointer;\r\n  -webkit-appearance: button;\r\n}\r\ninput[type="search"] {\r\n  -webkit-appearance: textfield;\r\n  box-sizing: content-box;\r\n}\r\ninput[type="search"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\ntextarea {\r\n  overflow: auto;\r\n  vertical-align: top;\r\n}\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(359deg);\r\n  }\r\n}\r\n@keyframes glow {\r\n  0%,\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n@font-face {\r\n  font-family: \'Nunito Sans\';\r\n  font-style: italic;\r\n  font-weight: 400;\r\n  src: url(https://fonts.gstatic.com/s/nunitosans/v8/pe0oMImSLYBIv1o4X1M8cce4E9lKcw.ttf) format(\'truetype\');\r\n}\r\n@font-face {\r\n  font-family: \'Nunito Sans\';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  src: url(https://fonts.gstatic.com/s/nunitosans/v8/pe0qMImSLYBIv1o4X1M8cce9I94.ttf) format(\'truetype\');\r\n}\r\n@font-face {\r\n  font-family: \'Nunito Sans\';\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  src: url(https://fonts.gstatic.com/s/nunitosans/v8/pe03MImSLYBIv1o4X1M8cc8aBc5tU1Q.ttf) format(\'truetype\');\r\n}\r\n.force-wrap {\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  -ms-word-break: break-all;\r\n  word-break: break-word;\r\n  -webkit-hyphens: auto;\r\n          hyphens: auto;\r\n}\r\n.type-light {\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-weight: 300;\r\n}\r\n.type-bold {\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-weight: 800;\r\n}\r\n.type-italic {\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-weight: 400;\r\n  font-style: italic;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\nhtml,\r\nbutton,\r\ninput,\r\ntextarea,\r\nselect {\r\n  outline: none;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\nbody {\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-style: 400;\r\n  color: #333;\r\n  font-size: 16px;\r\n  background-color: #26c6da;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-style: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nh1 {\r\n  font-size: 40px;\r\n  line-height: 48px;\r\n}\r\nh2 {\r\n  font-size: 28px;\r\n  line-height: 32px;\r\n}\r\nh3 {\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n}\r\nh4 {\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n}\r\nh5 {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #ccc;\r\n  text-transform: uppercase;\r\n}\r\nh6 {\r\n  color: #aaa;\r\n}\r\np {\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n}\r\nsub,\r\nsup {\r\n  font-size: 0.8em;\r\n}\r\nsub {\r\n  bottom: -0.2em;\r\n}\r\nsup {\r\n  top: -0.2em;\r\n}\r\nb {\r\n  font-weight: bold;\r\n}\r\nem {\r\n  font-style: italic;\r\n}\r\ninput[type="text"],\r\ninput[type="email"],\r\ninput[type="password"],\r\ntextarea {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-style: 400;\r\n  padding: 0.75rem 0;\r\n  line-height: 1.5rem !important;\r\n  border: none;\r\n  border-radius: 0;\r\n  box-sizing: border-box;\r\n  color: #333;\r\n  outline: none;\r\n}\r\ninput[type="text"] ::placeholder,\r\ninput[type="email"] ::placeholder,\r\ninput[type="password"] ::placeholder,\r\ntextarea ::placeholder {\r\n  color: #778b91;\r\n}\r\ninput[type="text"][disabled],\r\ninput[type="email"][disabled],\r\ninput[type="password"][disabled],\r\ntextarea[disabled] {\r\n  opacity: 0.5;\r\n}\r\ninput:-webkit-autofill {\r\n  -webkit-box-shadow: 0 0 0 1000px white inset;\r\n}\r\n.checkbox {\r\n  display: inline-block;\r\n  height: 3rem;\r\n  position: relative;\r\n  vertical-align: middle;\r\n  width: 44px;\r\n}\r\n.checkbox input[type="checkbox"] {\r\n  font-size: 1em;\r\n  visibility: hidden;\r\n}\r\n.checkbox input[type="checkbox"] + span:before {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: auto;\r\n  bottom: auto;\r\n  left: 50%;\r\n  width: 0.85em;\r\n  height: 0.85em;\r\n  transform: translate3d(-50%, -50%, 0);\r\n  background: transparent;\r\n  box-shadow: #2cc5d2 0 0 0 1px inset;\r\n  content: \'\';\r\n  display: block;\r\n}\r\n.checkbox input[type="checkbox"]:checked + span:before {\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  box-shadow: none;\r\n  color: #2cc5d2;\r\n  margin-top: -1px;\r\n  font-family: \'percolate\';\r\n  speak: none;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-transform: none;\r\n  line-height: 1;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  content: "\\e65e";\r\n}\r\n.input-symbol {\r\n  display: inline-block;\r\n  position: relative;\r\n}\r\n.input-symbol.error [class^="icon-"],\r\n.input-symbol.error [class*=" icon-"] {\r\n  color: #ff4400;\r\n}\r\n.input-symbol [class^="icon-"],\r\n.input-symbol [class*=" icon-"] {\r\n  left: 1em;\r\n}\r\n.input-symbol input {\r\n  padding-left: 3em;\r\n}\r\n.input-symbol input {\r\n  width: 100%;\r\n}\r\n.input-symbol input:focus + [class^="icon-"],\r\n.input-symbol input:focus + [class*=" icon-"] {\r\n  color: #2cc5d2;\r\n}\r\n.input-symbol [class^="icon-"],\r\n.input-symbol [class*=" icon-"] {\r\n  transition: all 300ms ease-in;\r\n  transform: translate3d(0, -50%, 0);\r\n  background: transparent;\r\n  color: #aaa;\r\n  font-size: 1em;\r\n  height: 1em;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 1em;\r\n}\r\n@font-face {\r\n  font-family: "percolate";\r\n  src: url(\'percolate.eot?-5w3um4\');\r\n  src: url(\'percolate.eot?#iefix5w3um4\') format("embedded-opentype"), url(\'percolate.woff?5w3um4\') format("woff"), url(\'percolate.ttf?5w3um4\') format("truetype"), url(\'percolate.svg?5w3um4\') format("svg");\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n[class^="icon-"],\r\n[class*=" icon-"] {\r\n  font-family: "percolate";\r\n  speak: none;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-transform: none;\r\n  line-height: 1;\r\n  /* Better Font Rendering =========== */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n.icon-graphql:before {\r\n  content: "\\e90a";\r\n}\r\n.icon-redux:before {\r\n  content: "\\e908";\r\n}\r\n.icon-grid:before {\r\n  content: "\\e909";\r\n}\r\n.icon-redirect:before {\r\n  content: "\\e907";\r\n}\r\n.icon-grow:before {\r\n  content: "\\e903";\r\n}\r\n.icon-lightning:before {\r\n  content: "\\e904";\r\n}\r\n.icon-request-change:before {\r\n  content: "\\e905";\r\n}\r\n.icon-transfer:before {\r\n  content: "\\e906";\r\n}\r\n.icon-calendar:before {\r\n  content: "\\e902";\r\n}\r\n.icon-sidebar:before {\r\n  content: "\\e900";\r\n}\r\n.icon-tablet:before {\r\n  content: "\\e901";\r\n}\r\n.icon-atmosphere:before {\r\n  content: "\\e671";\r\n}\r\n.icon-browser:before {\r\n  content: "\\e672";\r\n}\r\n.icon-database:before {\r\n  content: "\\e673";\r\n}\r\n.icon-expand-alt:before {\r\n  content: "\\e674";\r\n}\r\n.icon-mobile:before {\r\n  content: "\\e675";\r\n}\r\n.icon-watch:before {\r\n  content: "\\e676";\r\n}\r\n.icon-home:before {\r\n  content: "\\e600";\r\n}\r\n.icon-user-alt:before {\r\n  content: "\\e601";\r\n}\r\n.icon-user:before {\r\n  content: "\\e602";\r\n}\r\n.icon-user-add:before {\r\n  content: "\\e603";\r\n}\r\n.icon-users:before {\r\n  content: "\\e604";\r\n}\r\n.icon-profile:before {\r\n  content: "\\e605";\r\n}\r\n.icon-bookmark:before {\r\n  content: "\\e606";\r\n}\r\n.icon-bookmark-hollow:before {\r\n  content: "\\e607";\r\n}\r\n.icon-star:before {\r\n  content: "\\e608";\r\n}\r\n.icon-star-hollow:before {\r\n  content: "\\e609";\r\n}\r\n.icon-circle:before {\r\n  content: "\\e60a";\r\n}\r\n.icon-circle-hollow:before {\r\n  content: "\\e60b";\r\n}\r\n.icon-heart:before {\r\n  content: "\\e60c";\r\n}\r\n.icon-heart-hollow:before {\r\n  content: "\\e60d";\r\n}\r\n.icon-face-happy:before {\r\n  content: "\\e60e";\r\n}\r\n.icon-face-sad:before {\r\n  content: "\\e60f";\r\n}\r\n.icon-face-neutral:before {\r\n  content: "\\e610";\r\n}\r\n.icon-lock:before {\r\n  content: "\\e611";\r\n}\r\n.icon-unlock:before {\r\n  content: "\\e612";\r\n}\r\n.icon-key:before {\r\n  content: "\\e613";\r\n}\r\n.icon-arrow-left-alt:before {\r\n  content: "\\e614";\r\n}\r\n.icon-arrow-right-alt:before {\r\n  content: "\\e615";\r\n}\r\n.icon-sync:before {\r\n  content: "\\e616";\r\n}\r\n.icon-reply:before {\r\n  content: "\\e617";\r\n}\r\n.icon-expand:before {\r\n  content: "\\e618";\r\n}\r\n.icon-arrow-left:before {\r\n  content: "\\e619";\r\n}\r\n.icon-arrow-up:before {\r\n  content: "\\e61a";\r\n}\r\n.icon-arrow-down:before {\r\n  content: "\\e61b";\r\n}\r\n.icon-arrow-right:before {\r\n  content: "\\e61c";\r\n}\r\n.icon-chevron-down:before {\r\n  content: "\\e61d";\r\n}\r\n.icon-back:before {\r\n  content: "\\e61e";\r\n}\r\n.icon-download:before {\r\n  content: "\\e61f";\r\n}\r\n.icon-upload:before {\r\n  content: "\\e620";\r\n}\r\n.icon-proceed:before {\r\n  content: "\\e621";\r\n}\r\n.icon-info:before {\r\n  content: "\\e622";\r\n}\r\n.icon-question:before {\r\n  content: "\\e623";\r\n}\r\n.icon-alert:before {\r\n  content: "\\e624";\r\n}\r\n.icon-edit:before {\r\n  content: "\\e625";\r\n}\r\n.icon-paintbrush:before {\r\n  content: "\\e626";\r\n}\r\n.icon-close:before {\r\n  content: "\\e627";\r\n}\r\n.icon-trash:before {\r\n  content: "\\e628";\r\n}\r\n.icon-cross:before {\r\n  content: "\\e629";\r\n}\r\n.icon-delete:before {\r\n  content: "\\e62a";\r\n}\r\n.icon-power:before {\r\n  content: "\\e62b";\r\n}\r\n.icon-add:before {\r\n  content: "\\e62c";\r\n}\r\n.icon-plus:before {\r\n  content: "\\e62d";\r\n}\r\n.icon-document:before {\r\n  content: "\\e62e";\r\n}\r\n.icon-graph-line:before {\r\n  content: "\\e62f";\r\n}\r\n.icon-doc-chart:before {\r\n  content: "\\e630";\r\n}\r\n.icon-doc-list:before {\r\n  content: "\\e631";\r\n}\r\n.icon-category:before {\r\n  content: "\\e632";\r\n}\r\n.icon-copy:before {\r\n  content: "\\e633";\r\n}\r\n.icon-book:before {\r\n  content: "\\e634";\r\n}\r\n.icon-certificate:before {\r\n  content: "\\e636";\r\n}\r\n.icon-print:before {\r\n  content: "\\e637";\r\n}\r\n.icon-list-unordered:before {\r\n  content: "\\e638";\r\n}\r\n.icon-graph-bar:before {\r\n  content: "\\e639";\r\n}\r\n.icon-menu:before {\r\n  content: "\\e63a";\r\n}\r\n.icon-filter:before {\r\n  content: "\\e63b";\r\n}\r\n.icon-ellipsis:before {\r\n  content: "\\e63c";\r\n}\r\n.icon-cog:before {\r\n  content: "\\e63d";\r\n}\r\n.icon-wrench:before {\r\n  content: "\\e63e";\r\n}\r\n.icon-nut:before {\r\n  content: "\\e63f";\r\n}\r\n.icon-camera:before {\r\n  content: "\\e640";\r\n}\r\n.icon-eye:before {\r\n  content: "\\e641";\r\n}\r\n.icon-photo:before {\r\n  content: "\\e642";\r\n}\r\n.icon-video:before {\r\n  content: "\\e643";\r\n}\r\n.icon-speaker:before {\r\n  content: "\\e644";\r\n}\r\n.icon-phone:before {\r\n  content: "\\e645";\r\n}\r\n.icon-flag:before {\r\n  content: "\\e646";\r\n}\r\n.icon-pin:before {\r\n  content: "\\e647";\r\n}\r\n.icon-compass:before {\r\n  content: "\\e648";\r\n}\r\n.icon-globe:before {\r\n  content: "\\e649";\r\n}\r\n.icon-location:before {\r\n  content: "\\e64a";\r\n}\r\n.icon-search:before {\r\n  content: "\\e64b";\r\n}\r\n.icon-timer:before {\r\n  content: "\\e64c";\r\n}\r\n.icon-time:before {\r\n  content: "\\e64d";\r\n}\r\n.icon-dashboard:before {\r\n  content: "\\e64e";\r\n}\r\n.icon-hourglass:before {\r\n  content: "\\e64f";\r\n}\r\n.icon-play:before {\r\n  content: "\\e650";\r\n}\r\n.icon-stop:before {\r\n  content: "\\e651";\r\n}\r\n.icon-email:before {\r\n  content: "\\e652";\r\n}\r\n.icon-comment:before {\r\n  content: "\\e653";\r\n}\r\n.icon-link:before {\r\n  content: "\\e654";\r\n}\r\n.icon-paperclip:before {\r\n  content: "\\e655";\r\n}\r\n.icon-box:before {\r\n  content: "\\e656";\r\n}\r\n.icon-structure:before {\r\n  content: "\\e657";\r\n}\r\n.icon-commit:before {\r\n  content: "\\e658";\r\n}\r\n.icon-cpu:before {\r\n  content: "\\e659";\r\n}\r\n.icon-memory:before {\r\n  content: "\\e65a";\r\n}\r\n.icon-outbox:before {\r\n  content: "\\e65b";\r\n}\r\n.icon-share:before {\r\n  content: "\\e65c";\r\n}\r\n.icon-button:before {\r\n  content: "\\e65d";\r\n}\r\n.icon-check:before {\r\n  content: "\\e65e";\r\n}\r\n.icon-form:before {\r\n  content: "\\e65f";\r\n}\r\n.icon-admin:before {\r\n  content: "\\e660";\r\n}\r\n.icon-paragraph:before {\r\n  content: "\\e661";\r\n}\r\n.icon-bell:before {\r\n  content: "\\e662";\r\n}\r\n.icon-rss:before {\r\n  content: "\\e663";\r\n}\r\n.icon-basket:before {\r\n  content: "\\e664";\r\n}\r\n.icon-credit:before {\r\n  content: "\\e665";\r\n}\r\n.icon-support:before {\r\n  content: "\\e666";\r\n}\r\n.icon-shield:before {\r\n  content: "\\e667";\r\n}\r\n.icon-beaker:before {\r\n  content: "\\e668";\r\n}\r\n.icon-google:before {\r\n  content: "\\e669";\r\n}\r\n.icon-gdrive:before {\r\n  content: "\\e66a";\r\n}\r\n.icon-youtube:before {\r\n  content: "\\e66b";\r\n}\r\n.icon-facebook:before {\r\n  content: "\\e66c";\r\n}\r\n.icon-thumbs-up:before {\r\n  content: "\\e66d";\r\n}\r\n.icon-twitter:before {\r\n  content: "\\e66e";\r\n}\r\n.icon-github:before {\r\n  content: "\\e66f";\r\n}\r\n.icon-meteor:before {\r\n  content: "\\e670";\r\n}\r\na {\r\n  transition: all 200ms ease-in;\r\n  color: #5db9ff;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n}\r\na:hover {\r\n  color: #239da8;\r\n}\r\na:active {\r\n  color: #555;\r\n}\r\na:focus {\r\n  outline: none;\r\n}\r\n.list-heading {\r\n  letter-spacing: 0.3em;\r\n  text-indent: 0.3em;\r\n  text-transform: uppercase;\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-weight: 800;\r\n  font-size: 11px;\r\n  padding-left: 15px;\r\n  line-height: 40px;\r\n  background: #f8f8f8;\r\n  color: #aaa;\r\n}\r\n.list-heading .icon-sync {\r\n  opacity: 1;\r\n  animation: spin 2s infinite linear;\r\n  display: inline-block;\r\n  margin-right: 4px;\r\n}\r\n.list-item {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: 3rem;\r\n  width: 100%;\r\n  background: white;\r\n  transition: all ease-out 150ms;\r\n}\r\n.list-item .title {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  flex: 1;\r\n}\r\n.list-item input[type="text"] {\r\n  background: transparent;\r\n  width: 100%;\r\n}\r\n.list-item input[type="text"]:focus {\r\n  cursor: text;\r\n}\r\n.list-item .actions {\r\n  transition: all 200ms ease-in;\r\n  padding-right: 20px;\r\n}\r\n.list-item .actions a {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  text-align: center;\r\n  color: #eee;\r\n}\r\n.list-item .actions a:hover {\r\n  color: #2cc5d2;\r\n}\r\n.list-item .actions a:active {\r\n  color: #555;\r\n}\r\n.list-item .actions [class^="icon-"] {\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  line-height: 3rem;\r\n  text-align: center;\r\n}\r\n.list-item.TASK_PINNED .icon-star {\r\n  color: #2cc5d2;\r\n}\r\n.list-item.TASK_ARCHIVED input[type="text"] {\r\n  color: #aaa;\r\n}\r\n.list-item:hover {\r\n  background-image: linear-gradient(to bottom, #e5f9f7 0%, #f0fffd 100%);\r\n}\r\n.list-item:hover .checkbox {\r\n  cursor: pointer;\r\n}\r\n.list-item + .list-item {\r\n  border-top: 1px solid #f0f9fb;\r\n}\r\n.list-item.checked input[type="text"] {\r\n  color: #ccc;\r\n  text-decoration: line-through;\r\n}\r\n.list-item.checked .delete-item {\r\n  display: inline-block;\r\n}\r\n.loading-item {\r\n  height: 3rem;\r\n  width: 100%;\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  line-height: 1rem;\r\n  padding-left: 16px;\r\n}\r\n.loading-item .glow-checkbox,\r\n.loading-item .glow-text span {\r\n  animation: glow 1.5s ease-in-out infinite;\r\n  background: #eee;\r\n  color: transparent;\r\n  cursor: progress;\r\n  display: inline-block;\r\n}\r\n.loading-item .glow-checkbox {\r\n  margin-right: 16px;\r\n  width: 12px;\r\n  height: 12px;\r\n}\r\n.loading-item + .loading-item {\r\n  border-top: 1px solid #f0f9fb;\r\n}\r\n.list-items {\r\n  position: relative;\r\n  background: white;\r\n  min-height: 288px;\r\n}\r\n.list-items .select-placeholder {\r\n  border: none;\r\n  width: 48px;\r\n}\r\n.wrapper-message {\r\n  position: absolute;\r\n  top: 45%;\r\n  right: 0;\r\n  bottom: auto;\r\n  left: 0;\r\n  width: auto;\r\n  height: auto;\r\n  transform: translate3d(0, -50%, 0);\r\n  text-align: center;\r\n}\r\n.wrapper-message [class^="icon-"],\r\n.wrapper-message [class*=" icon-"] {\r\n  font-size: 48px;\r\n  line-height: 56px;\r\n  color: #2cc5d2;\r\n  display: block;\r\n}\r\n.wrapper-message .title-message {\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-weight: 800;\r\n  color: #555;\r\n}\r\n.wrapper-message .subtitle-message {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #666;\r\n}\r\n.page.lists-show {\r\n  min-height: 100vh;\r\n  background: white;\r\n}\r\n.page.lists-show nav {\r\n  background: #d3edf4;\r\n  padding: 1.5rem 1.25rem;\r\n  text-align: center;\r\n}\r\n@media screen and (min-width: 40em) {\r\n  .page.lists-show nav {\r\n    text-align: left;\r\n  }\r\n}\r\n.page.lists-show nav .title-page {\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  line-height: 2rem;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n}\r\n.page.lists-show nav .title-page .title-wrapper {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  font-family: \'Nunito Sans\', "Helvetica Neue", Helvetica, Arial, sans-serif;\r\n  font-weight: 800;\r\n  color: #1c3f53;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  max-width: 100%;\r\n}\r\n',""]),__webpack_exports__.a=___CSS_LOADER_EXPORT___},"./src/app/components sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.ts)$":function(module,exports,__webpack_require__){var map={"./pure-inbox-screen.stories.ts":"./src/app/components/pure-inbox-screen.stories.ts","./pure-task-list.stories.ts":"./src/app/components/pure-task-list.stories.ts","./task.stories.ts":"./src/app/components/task.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src/app/components sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.ts)$"},"./src/app/components/pure-inbox-screen.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Error",(function(){return Error}));var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),common=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let PureInboxScreenComponent=class PureInboxScreenComponent{};Object(tslib_es6.a)([Object(core.Input)(),Object(tslib_es6.b)("design:type",Object)],PureInboxScreenComponent.prototype,"error",void 0),PureInboxScreenComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-pure-inbox-screen",template:'\n    <div *ngIf="error" class="page lists-show">\n      <div class="wrapper-message">\n        <span class="icon-face-sad"></span>\n        <div class="title-message">Oh no!</div>\n        <div class="subtitle-message">Something went wrong</div>\n      </div>\n    </div>\n\n    <div *ngIf="!error" class="page lists-show">\n      <nav>\n        <h1 class="title-page">\n          <span class="title-wrapper">Taskbox</span>\n        </h1>\n      </nav>\n      <app-task-list></app-task-list>\n    </div>\n  '})],PureInboxScreenComponent);var _a,_b,_c,ngxs_store=__webpack_require__("./node_modules/@ngxs/store/__ivy_ngcc__/fesm2015/ngxs-store.js"),task_component=__webpack_require__("./src/app/components/task.component.ts");const actions_ARCHIVE_TASK="ARCHIVE_TASK",actions_PIN_TASK="PIN_TASK",actions_ERROR="APP_ERROR";class ArchiveTask{constructor(payload){this.payload=payload}}ArchiveTask.type=actions_ARCHIVE_TASK;class PinTask{constructor(payload){this.payload=payload}}PinTask.type=actions_PIN_TASK;class AppError{constructor(payload){this.payload=payload}}AppError.type=actions_ERROR;class TaskStateModel{}let TasksState=class TasksState{static getAllTasks(state){const entities=state.entities;return Object.keys(entities).map((id=>entities[+id]))}static getError(state){const{error:error}=state;return error}pinTask({patchState:patchState,getState:getState},{payload:payload}){const state=getState().entities;patchState({entities:Object.assign(Object.assign({},state),{[payload]:Object.assign(Object.assign({},state[payload]),{state:"TASK_PINNED"})})})}archiveTask({patchState:patchState,getState:getState},{payload:payload}){const state=getState().entities;patchState({entities:Object.assign(Object.assign({},state),{[payload]:Object.assign(Object.assign({},state[payload]),{state:"TASK_ARCHIVED"})})})}setAppError({patchState:patchState,getState:getState},{payload:payload}){patchState({error:!getState().error})}};Object(tslib_es6.a)([Object(ngxs_store.a)(PinTask),Object(tslib_es6.b)("design:type",Function),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_a=void 0!==ngxs_store.StateContext&&ngxs_store.StateContext)?_a:Object,PinTask]),Object(tslib_es6.b)("design:returntype",void 0)],TasksState.prototype,"pinTask",null),Object(tslib_es6.a)([Object(ngxs_store.a)(ArchiveTask),Object(tslib_es6.b)("design:type",Function),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_b=void 0!==ngxs_store.StateContext&&ngxs_store.StateContext)?_b:Object,ArchiveTask]),Object(tslib_es6.b)("design:returntype",void 0)],TasksState.prototype,"archiveTask",null),Object(tslib_es6.a)([Object(ngxs_store.a)(AppError),Object(tslib_es6.b)("design:type",Function),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_c=void 0!==ngxs_store.StateContext&&ngxs_store.StateContext)?_c:Object,AppError]),Object(tslib_es6.b)("design:returntype",void 0)],TasksState.prototype,"setAppError",null),Object(tslib_es6.a)([Object(ngxs_store.d)(),Object(tslib_es6.b)("design:type",Function),Object(tslib_es6.b)("design:paramtypes",[TaskStateModel]),Object(tslib_es6.b)("design:returntype",void 0)],TasksState,"getAllTasks",null),Object(tslib_es6.a)([Object(ngxs_store.d)(),Object(tslib_es6.b)("design:type",Function),Object(tslib_es6.b)("design:paramtypes",[TaskStateModel]),Object(tslib_es6.b)("design:returntype",void 0)],TasksState,"getError",null),TasksState=Object(tslib_es6.a)([Object(ngxs_store.e)({name:"tasks",defaults:{entities:{1:{id:"1",title:"Something",state:"TASK_INBOX"},2:{id:"2",title:"Something more",state:"TASK_INBOX"},3:{id:"3",title:"Something else",state:"TASK_INBOX"},4:{id:"4",title:"Something again",state:"TASK_INBOX"}},error:!1}})],TasksState);var task_list_component_a,task_list_component_b,Observable=__webpack_require__("./node_modules/rxjs/_esm2015/internal/Observable.js");let task_list_component_TaskListComponent=class TaskListComponent{constructor(store){this.store=store}archiveTask(id){this.store.dispatch(new ArchiveTask(id))}pinTask(id){this.store.dispatch(new PinTask(id))}};Object(tslib_es6.a)([Object(ngxs_store.c)(TasksState.getAllTasks),Object(tslib_es6.b)("design:type","function"==typeof(task_list_component_a=void 0!==Observable.a&&Observable.a)?task_list_component_a:Object)],task_list_component_TaskListComponent.prototype,"tasks$",void 0),task_list_component_TaskListComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-task-list",template:'\n    <app-pure-task-list\n      [tasks]="tasks$ | async"\n      (onArchiveTask)="archiveTask($event)"\n      (onPinTask)="pinTask($event)"\n    ></app-pure-task-list>\n  '}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(task_list_component_b=void 0!==ngxs_store.g&&ngxs_store.g)?task_list_component_b:Object])],task_list_component_TaskListComponent);var pure_task_list_component=__webpack_require__("./src/app/components/pure-task-list.component.ts");let TaskModule=class TaskModule{};TaskModule=Object(tslib_es6.a)([Object(core.NgModule)({imports:[common.a,ngxs_store.b.forFeature([TasksState])],exports:[task_component.a,task_list_component_TaskListComponent],declarations:[task_component.a,task_list_component_TaskListComponent,pure_task_list_component.a],providers:[]})],TaskModule);__webpack_exports__.default={component:PureInboxScreenComponent,decorators:[Object(client.moduleMetadata)({imports:[common.a,TaskModule,ngxs_store.b.forRoot([TasksState])],providers:[ngxs_store.g]})],title:"PureInboxScreen"};const Template=args=>({props:args}),Default=Template.bind({}),Error=Template.bind({});Error.args={error:!0},Default.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: args,\r\n})"}},Default.parameters),Error.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: args,\r\n})"}},Error.parameters)},"./src/app/components/pure-task-list.component.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PureTaskListComponent}));var _a,_b,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let PureTaskListComponent=class PureTaskListComponent{constructor(){this.tasksInOrder=[],this.loading=!1,this.onPinTask=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.onArchiveTask=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter}set tasks(arr){this.tasksInOrder=[...arr.filter((t=>"TASK_PINNED"===t.state)),...arr.filter((t=>"TASK_PINNED"!==t.state))]}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Object)],PureTaskListComponent.prototype,"loading",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_a=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter)?_a:Object)],PureTaskListComponent.prototype,"onPinTask",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_b=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter)?_b:Object)],PureTaskListComponent.prototype,"onArchiveTask",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Array),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[Array])],PureTaskListComponent.prototype,"tasks",null),PureTaskListComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"app-pure-task-list",template:'\n    <div class="list-items">\n      <app-task\n        *ngFor="let task of tasksInOrder"\n        [task]="task"\n        (onArchiveTask)="onArchiveTask.emit($event)"\n        (onPinTask)="onPinTask.emit($event)"\n      >\n      </app-task>\n      <div\n        *ngIf="tasksInOrder.length === 0 && !loading"\n        class="wrapper-message"\n      >\n        <span class="icon-check"></span>\n        <div class="title-message">You have no tasks</div>\n        <div class="subtitle-message">Sit back and relax</div>\n      </div>\n      <div *ngIf="loading">\n        <div *ngFor="let i of [1, 2, 3, 4, 5, 6]" class="loading-item">\n          <span class="glow-checkbox"></span>\n          <span class="glow-text">\n            <span>Loading</span> <span>cool</span> <span>state</span>\n          </span>\n        </div>\n      </div>\n    </div>\n  '})],PureTaskListComponent)},"./src/app/components/pure-task-list.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"WithPinnedTasks",(function(){return WithPinnedTasks})),__webpack_require__.d(__webpack_exports__,"Loading",(function(){return Loading})),__webpack_require__.d(__webpack_exports__,"Empty",(function(){return Empty}));var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_common__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),_pure_task_list_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/app/components/pure-task-list.component.ts"),_task_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/app/components/task.component.ts"),_task_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/app/components/task.stories.ts");__webpack_exports__.default={component:_pure_task_list_component__WEBPACK_IMPORTED_MODULE_2__.a,decorators:[Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_pure_task_list_component__WEBPACK_IMPORTED_MODULE_2__.a,_task_component__WEBPACK_IMPORTED_MODULE_3__.a],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_1__.a]}),Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.componentWrapperDecorator)((story=>`<div style="margin: 3em">${story}</div>`))],title:"PureTaskList"};const Template=args=>({props:Object.assign(Object.assign({},args),{onPinTask:_task_stories__WEBPACK_IMPORTED_MODULE_4__.actionsData.onPinTask,onArchiveTask:_task_stories__WEBPACK_IMPORTED_MODULE_4__.actionsData.onArchiveTask})}),Default=Template.bind({});Default.args={tasks:[Object.assign(Object.assign({},_task_stories__WEBPACK_IMPORTED_MODULE_4__.Default.args.task),{id:"1",title:"Task 1"}),Object.assign(Object.assign({},_task_stories__WEBPACK_IMPORTED_MODULE_4__.Default.args.task),{id:"2",title:"Task 2"}),Object.assign(Object.assign({},_task_stories__WEBPACK_IMPORTED_MODULE_4__.Default.args.task),{id:"3",title:"Task 3"}),Object.assign(Object.assign({},_task_stories__WEBPACK_IMPORTED_MODULE_4__.Default.args.task),{id:"4",title:"Task 4"}),Object.assign(Object.assign({},_task_stories__WEBPACK_IMPORTED_MODULE_4__.Default.args.task),{id:"5",title:"Task 5"}),Object.assign(Object.assign({},_task_stories__WEBPACK_IMPORTED_MODULE_4__.Default.args.task),{id:"6",title:"Task 6"})]};const WithPinnedTasks=Template.bind({});WithPinnedTasks.args={tasks:[...Default.args.tasks.slice(0,5),{id:"6",title:"Task 6 (pinned)",state:"TASK_PINNED"}]};const Loading=Template.bind({});Loading.args={tasks:[],loading:!0};const Empty=Template.bind({});Empty.args=Object.assign(Object.assign({},Loading.args),{loading:!1}),Default.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: TaskStories.actionsData.onPinTask,\r\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n  },\r\n})"}},Default.parameters),WithPinnedTasks.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: TaskStories.actionsData.onPinTask,\r\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n  },\r\n})"}},WithPinnedTasks.parameters),Loading.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: TaskStories.actionsData.onPinTask,\r\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n  },\r\n})"}},Loading.parameters),Empty.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: TaskStories.actionsData.onPinTask,\r\n    onArchiveTask: TaskStories.actionsData.onArchiveTask,\r\n  },\r\n})"}},Empty.parameters)},"./src/app/components/task.component.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return task_component_TaskComponent}));var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");let task_component_TaskComponent=class TaskComponent{constructor(){this.onPinTask=new core.EventEmitter,this.onArchiveTask=new core.EventEmitter}onPin(id){this.onPinTask.emit(id)}onArchive(id){this.onArchiveTask.emit(id)}};Object(tslib_es6.a)([Object(core.Input)(),Object(tslib_es6.b)("design:type","function"!=typeof!1&&Object)],task_component_TaskComponent.prototype,"task",void 0),Object(tslib_es6.a)([Object(core.Output)(),Object(tslib_es6.b)("design:type",Object)],task_component_TaskComponent.prototype,"onPinTask",void 0),Object(tslib_es6.a)([Object(core.Output)(),Object(tslib_es6.b)("design:type",Object)],task_component_TaskComponent.prototype,"onArchiveTask",void 0),task_component_TaskComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-task",template:'\n    <div class="list-item {{ task?.state }}">\n      <label class="checkbox">\n        <input\n          type="checkbox"\n          [defaultChecked]="task?.state === \'TASK_ARCHIVED\'"\n          disabled="true"\n          name="checked"\n        />\n        <span\n          class="checkbox-custom"\n          (click)="onArchive(task.id)"\n          attr.aria-label="archiveTask-{{ task?.id }}"\n        ></span>\n      </label>\n      <div class="title">\n        <input\n          type="text"\n          [value]="task?.title"\n          readonly="true"\n          placeholder="Input title"\n        />\n      </div>\n      <div class="actions">\n        <a *ngIf="task?.state !== \'TASK_ARCHIVED\'" (click)="onPin(task.id)">\n          <span\n            class="icon-star"\n            attr.aria-label="pinTask-{{ task?.id }}"\n          ></span>\n        </a>\n      </div>\n    </div>\n  '})],task_component_TaskComponent)},"./src/app/components/task.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"actionsData",(function(){return actionsData})),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Pinned",(function(){return Pinned})),__webpack_require__.d(__webpack_exports__,"Archived",(function(){return Archived}));var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_angular_common__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_task_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/app/components/task.component.ts");__webpack_exports__.default={component:_task_component__WEBPACK_IMPORTED_MODULE_3__.a,decorators:[Object(_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_task_component__WEBPACK_IMPORTED_MODULE_3__.a],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_1__.a]})],title:"Task",excludeStories:/.*Data$/};const actionsData={onPinTask:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onPinTask"),onArchiveTask:Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("onArchiveTask")},Template=args=>({props:Object.assign(Object.assign({},args),{onPinTask:actionsData.onPinTask,onArchiveTask:actionsData.onArchiveTask})}),Default=Template.bind({});Default.args={task:{id:"1",title:"Test Task",state:"TASK_INBOX",updatedAt:new Date(2021,0,1,9,0)}};const Pinned=Template.bind({});Pinned.args={task:Object.assign(Object.assign({},Default.args.task),{state:"TASK_PINNED"})};const Archived=Template.bind({});Archived.args={task:Object.assign(Object.assign({},Default.args.task),{state:"TASK_ARCHIVED"})},Default.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: actionsData.onPinTask,\r\n    onArchiveTask: actionsData.onArchiveTask,\r\n  },\r\n})"}},Default.parameters),Pinned.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: actionsData.onPinTask,\r\n    onArchiveTask: actionsData.onArchiveTask,\r\n  },\r\n})"}},Pinned.parameters),Archived.parameters=Object.assign({storySource:{source:"(args) => ({\r\n  props: {\r\n    ...args,\r\n    onPinTask: actionsData.onPinTask,\r\n    onArchiveTask: actionsData.onArchiveTask,\r\n  },\r\n})"}},Archived.parameters)},"./src/styles.css":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_cjs_js_ref_8_1_node_modules_postcss_loader_dist_cjs_js_ref_8_2_styles_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./src/styles.css"),options={insert:"head",singleton:!1};_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ref_8_1_node_modules_postcss_loader_dist_cjs_js_ref_8_2_styles_css__WEBPACK_IMPORTED_MODULE_1__.a,options);__webpack_exports__.default=_node_modules_css_loader_dist_cjs_js_ref_8_1_node_modules_postcss_loader_dist_cjs_js_ref_8_2_styles_css__WEBPACK_IMPORTED_MODULE_1__.a.locals||{}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),__webpack_require__("./generated-stories-entry.js"),module.exports=__webpack_require__("./src/styles.css")},1:function(module,exports){}},[[0,6,7]]]);